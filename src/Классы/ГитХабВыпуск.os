Перем Метка Экспорт; // Строка
Перем Описание; // Строка
Перем ВеткаИлиКоммит; // Строка
Перем Черновик; // Булево
Перем ПредварительныйВыпуск; // Булево
Перем Наименование; // Строка

Перем Репозиторий; // Объект
Перем ОписаниеПолейАПИ; // Структура

Перем Адреса; // Структура
Перем Идентификатор; // Строка

Перем ДатаСоздания; // Дата
Перем ДатаПубликации; // Дата

Перем ФайлыВыпуска; // Массив

Функция ЗаполнитьПоОписанию(ОписаниеВыпуска) Экспорт

	Метка = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "tag_name", Метка);
	Наименование = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "name", Наименование);
	ВеткаИлиКоммит = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "target_commitish", ВеткаИлиКоммит);
	Описание = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "body", Описание);
	
	Черновик = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "draft", Черновик);
	ПредварительныйВыпуск = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "prerelease", ПредварительныйВыпуск);
	Идентификатор = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "id", Идентификатор);

	ДатаСоздания = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "created_at", ДатаСоздания);
	ДатаПубликации = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "published_at", ДатаПубликации);

	Адреса.АдресApi = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "url");
	Адреса.АдресHtml = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "html_url");
	Адреса.АдресФайлов = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "assets_url");
	Адреса.АдресЗагрузкиФайлов = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "upload_url");
	Адреса.АдресTar = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "tarball_url");
	Адреса.АдресZip = ПолучитьЗначениеИзОписания(ОписаниеВыпуска, "zipball_url");

	ЗаполнитьФайлыВыпуска(ОписаниеВыпуска);

КонецФункции

Процедура ЗаполнитьФайлыВыпуска(ОписаниеВыпуска)

	ФайлыВыпуска = Новый Массив;
	МассивОписанийФайловВыпуска = ОписаниеВыпуска["assets"];

	Если МассивОписанийФайловВыпуска = Неопределено Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры


Функция ПолучитьЗначениеИзОписания(Описание, Знач Ключ, Знач ЗначениеПоУмолчанию = "")

	ЗначениеИзОписания = Описание[Ключ];

	Если ЗначениеИзОписания = Неопределено Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;

	Возврат ЗначениеИзОписания;

КонецФункции

Процедура ЗагрузитьФайл(Знач ПутьКфайлу,
						Знач ИмяФайла = "",
						Знач КраткоеОписание = "",
						Знач ТипКонтентаФайла = "application/zip") Экспорт
	
	ФайлЗагрузки = Новый Файл(ПутьКФайлу);

	Если Не ФайлЗагрузки.Существует() Тогда
		ВызватьИсключение СтрШаблон("Файл <%1> для отправки не существует", ФайлЗагрузки.ПолноеИмя);
	КонецЕсли;

	Если ПустаяСтрока(ИмяФайла) Тогда
		ИмяФайла = ФайлЗагрузки.Имя;
	КонецЕсли;

	КлиентАПИ = Репозиторий.КлиентАПИ;

	ДополнительныеПараметры = СтрШаблон("?Name=""%1"",Content-Type=""%""", ИмяФайла, ТипКонтентаФайла);
	
	Если Не ПустаяСтрока(КраткоеОписание) Тогда
		ДополнительныеПараметры = СтрШаблон("%1,label=""%2""", ДополнительныеПараметры, КраткоеОписание);
	КонецЕсли;

	// https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
	АдресОтправки = СтрЗаменить(Адреса.АдресЗагрузкиФайлов, "{?name,label}", "") + ДополнительныеПараметры;

	HTTPЗапрос = КлиентАПИ.ПолучитьHTTPЗапрос(АдресОтправки);
	HTTPЗапрос.УстановитьТелоИзДвоичныхДанных(Новый ДвоичныеДанные(ФайлЗагрузки.ПолноеИмя));

	КлиентАПИ.Отправить(HTTPЗапрос);

КонецПроцедуры

Процедура Изменить(Знач ЗначениеМетка, 
					Знач ЗначениеОписание = Неопределено, 
					Знач ЗначениеВеткаИлиКоммит = Неопределено, 
					Знач ЗначениеЧерновик = Неопределено, 
					Знач ЗначениеПредварительныйВыпуск = Неопределено)
	
	Метка = ЗначениеМетка;
	
	Если ЗначениеЗаполнено(ЗначениеОписание) Тогда
		Описание = ЗначениеОписание;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЗначениеВеткаИлиКоммит) Тогда
		ВеткаИлиКоммит = ЗначениеВеткаИлиКоммит;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЗначениеЧерновик) Тогда
		Черновик = ЗначениеЧерновик;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЗначениеПредварительныйВыпуск) Тогда
		ПредварительныйВыпуск = ЗначениеПредварительныйВыпуск;
	КонецЕсли;

	СтруктураЗапроса = Новый Структура();
	СтруктураЗапроса.Вставить("tag_name", Метка);
	СтруктураЗапроса.Вставить("body", Описание);
	СтруктураЗапроса.Вставить("target_commitish", ВеткаИлиКоммит);
	СтруктураЗапроса.Вставить("name", Наименование);
	СтруктураЗапроса.Вставить("draft", Черновик);
	СтруктураЗапроса.Вставить("prerelease", ПредварительныйВыпуск);
	КлиентАПИ = Репозиторий.КлиентАПИ;
	HTTPЗапрос = КлиентАПИ.ПолучитьHTTPЗапрос(Адреса.АдресApi, СтруктураЗапроса);
	КлиентАПИ.Изменить(HTTPЗапрос);

КонецПроцедуры

Процедура Удалить() Экспорт

	КлиентАПИ = Репозиторий.КлиентАПИ;
	HTTPЗапрос = КлиентАПИ.ПолучитьHTTPЗапрос(Адреса.АдресApi);
	
	КлиентАПИ.УстановитьДопустимыйКодСостояния(204);
	КлиентАПИ.Удалить(HTTPЗапрос);
	КлиентАПИ.УстановитьДопустимыйКодСостояния(200);

КонецПроцедуры

Процедура ПриСозданииОбъекта(Знач ЗначениеРепозиторий)

	Репозиторий = ЗначениеРепозиторий;
	
	Адреса = Новый Структура("АдресApi, АдресHtml, АдресФайлов, АдресЗагрузкиФайлов, АдресZip, АдресTar");

КонецПроцедуры