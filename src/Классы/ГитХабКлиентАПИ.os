#Использовать restler
#Использовать logos
#Использовать json

Перем APIКлиент;
Перем НастройкаПрокси;
Перем Лог;

Перем Заголовки;

Перем ИндексСоединений;
Перем ДопустимыйКодСостояния;

Перем АдресСервера;
Перем АдресСервераЗагрузки;

Процедура ПриСозданииОбъекта()

	АдресСервера = "https://api.github.com/";
	АдресСервераЗагрузки = "https://uploads.github.com/";
	
	ИндексСоединений = Новый Соответствие;

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("User-Agent", "Awesome-Octocat-App");
	ДопустимыйКодСостояния = 200;
	
	ТокенИзОкружения = ПолучитьПеременнуюСреды("GITHUB_TOKEN");

	Если ЗначениеЗаполнено(ТокенИзОкружения) Тогда
		УстановитьТокенАвторизации(ТокенИзОкружения);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьАдресСервера(Знач НовыйАдресСервера) Экспорт
	АдресСервера = НовыйАдресСервера;
КонецПроцедуры

Процедура УстановитьАдресСервераЗагрузки(Знач НовыйАдресСервераЗагрузки) Экспорт
	АдресСервераЗагрузки = НовыйАдресСервераЗагрузки;
КонецПроцедуры

Процедура УстановитьДопустимыйКодСостояния(Знач НовыйДопустимыйКодСостояния) Экспорт
	ДопустимыйКодСостояния = НовыйДопустимыйКодСостояния;
КонецПроцедуры

Функция ПолучитьСоединение(Знач АдресСервера)

	Соединение = ИндексСоединений[АдресСервера];

	Если Соединение = Неопределено Тогда
		Соединение = Новый HTTPСоединение(АдресСервера, , , ,НастройкаПрокси);
		ИндексСоединений.Вставить(АдресСервера, Соединение);
	КонецЕсли;

	Возврат Соединение;

КонецФункции

Процедура УстановитьСоединение(Знач АдресСервера, Знач НовоеHTTPСоединение) Экспорт

	ИндексСоединений.Вставить(АдресСервера, НовоеHTTPСоединение);
	
КонецПроцедуры

Функция ПолучитьАдресСервераИзЗапроса(HTTPЗапрос)
	
	АдресРесурса = HTTPЗапрос.АдресРесурса;

	НовыйАдресРесурса = СтрЗаменить(АдресРесурса, АдресСервера, "");
	НовыйАдресРесурса = СтрЗаменить(НовыйАдресРесурса, АдресСервераЗагрузки, "");

	Если СтрНачинаетсяС(АдресСервераЗагрузки, АдресСервера) Тогда
		Возврат АдресСервераЗагрузки;
	Иначе
		Возврат АдресСервера;
	КонецЕсли;

КонецФункции

Функция ПолучитьHTTPЗапрос(Знач АдресРесурса, ДанныеДляОтправки = Неопределено) Экспорт

	HTTPЗапрос = НовыйHTTPЗапрос(АдресРесурса);

	Если ЗначениеЗаполнено(ДанныеДляОтправки)
		И (ТипЗнч(ДанныеДляОтправки) = Тип("Структура")
			ИЛИ ТипЗнч(ДанныеДляОтправки) = Тип("Соответствие") )
			Тогда
			ТелоЗапроса = ВJson(ДанныеДляОтправки);
			HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, КодировкаТекста.UTF8NoBom);
	КонецЕсли;


	Возврат HTTPЗапрос;

КонецФункции

Функция НовыйHTTPЗапрос(Знач Ресурс) Экспорт

	Возврат Новый HTTPЗапрос(Ресурс, Заголовки);

КонецФункции

Функция Отправить(HTTPЗапрос) Экспорт

	Соединение = СформироватьСоединение(HTTPЗапрос);
	HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	Ответ = ПрочитатьОтветЗапроса(HTTPОтвет);

	Возврат Ответ;

КонецФункции

Функция Изменить(HTTPЗапрос) Экспорт

	Соединение = СформироватьСоединение(HTTPЗапрос);
	HTTPОтвет = Соединение.Изменить(HTTPЗапрос);
	Ответ = ПрочитатьОтветЗапроса(HTTPОтвет);

	Возврат Ответ;

КонецФункции

Функция Получить(HTTPЗапрос) Экспорт

	Соединение = СформироватьСоединение(HTTPЗапрос);
	HTTPОтвет = Соединение.Получить(HTTPЗапрос);
	Ответ = ПрочитатьОтветЗапроса(HTTPОтвет);

	Возврат Ответ;

КонецФункции

Функция Удалить(HTTPЗапрос) Экспорт

	Соединение = СформироватьСоединение(HTTPЗапрос);
	HTTPОтвет = Соединение.Удалить(HTTPЗапрос);
	Ответ = ПрочитатьОтветЗапроса(HTTPОтвет);

	Возврат Ответ;

КонецФункции

Процедура УстановитьТокенАвторизации(Знач Токен) Экспорт

	Заголовки.Вставить("Authorization", "token " +Токен);

КонецПроцедуры

Процедура УстановитьПрокси(Знач НоваяНастройкаПрокси) Экспорт
	НастройкаПрокси = НоваяНастройкаПрокси;
КонецПроцедуры

Функция СформироватьСоединение(Запрос)
	
	АдресСервера = ПолучитьАдресСервераИзЗапроса(Запрос);
	Соединение = ПолучитьСоединение(АдресСервера);

	Возврат Соединение;

КонецФункции

Функция ВJson(Знач СтруктураЗапроса)
	
	ПарсерJSON = Новый ПарсерJSON;
	Возврат ПарсерJSON.ЗаписатьJSON(СтруктураЗапроса);

КонецФункции

Функция ИЗJson(ТелоОтвета)
	
	Парсер = Новый ПарсерJSON;
	Результат = Парсер.ПрочитатьJSON(ТелоОтвета);

	Возврат Результат;

КонецФункции

Функция ПрочитатьОтветЗапроса(Знач Ответ)
	
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	Если ТелоОтвета = Неопределено Тогда
		ТелоОтвета = "";
	КонецЕсли;

	Лог.Отладка("Код состояния: %1", Ответ.КодСостояния);
	Лог.Отладка("Тело ответа: 
		|%1", ТелоОтвета);
	
	Если Ответ.КодСостояния <> ДопустимыйКодСостояния Тогда
		ТекстСообщения = СтрШаблон(
			"Получен код возврата: %1
			|Тело ответа: %2", 
			Ответ.КодСостояния,
			ТелоОтвета
		);
		ИнфИсключение = Новый ИнформацияОбОшибке(ТекстСообщения, Ответ);
		ВызватьИсключение ИнфИсключение;
	КонецЕсли;

	Результат = Новый Соответствие;
	Если ЗначениеЗаполнено(ТелоОтвета) Тогда
		Результат = ИЗJson(ТелоОтвета);
	КонецЕсли;

	Возврат Результат;

КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.github.api.client");
